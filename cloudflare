#!/bin/bash

# ===============================================
# Cloudflare SSL Configurer Script (Standalone)
# ===============================================

# --- Arguments ---
XRAY_CONFIG_DIR="$1"
XRAY_TLS_DIR="$2"
ADMIN_EMAIL="$3"
CLOUDFLARE_API_KEY="$4"
FULL_DOMAIN="$5"
XRAY_BIN_PATH="$6"
XRAY_LOG_DIR="$7"
MY_PUBLIC_IP="$8"

# --- Colors ---
RED='\033[0m\033[1;31m'
GREEN='\033[0m\033[1;32m'
YELLOW='\033[0m\033[1;33m'
NC='\033[0m'

# --- Helper Functions ---
print_status() { echo -e "\n${YELLOW}>>> $1${NC}"; }
print_error() { echo -e "${RED}!!! ERROR: $1${NC}" >&2; exit 1; }

# --- Start Process ---
print_status "Executing Cloudflare SSL Configuration..."

# --- Step 1: Ensure acme.sh is installed ---
ACME_SH_PATH="$HOME/.acme.sh/acme.sh"

if [ ! -f "$ACME_SH_PATH" ]; then
    print_status "Installing acme.sh..."
    curl https://get.acme.sh | sh || print_error "Failed to install acme.sh"
    export PATH="$HOME/.acme.sh:$PATH"
    source ~/.bashrc 2>/dev/null || true
fi

if [ ! -x "$ACME_SH_PATH" ]; then
    print_error "acme.sh not found or not executable at $ACME_SH_PATH"
fi

# --- Step 2: Export Cloudflare API credentials ---
export CF_Key="$CLOUDFLARE_API_KEY"
export CF_Email="$ADMIN_EMAIL"

if [ -z "$CF_Key" ]; then
    print_error "Cloudflare Global API Key is empty."
fi

# --- Step 3: Set Let's Encrypt CA ---
"$ACME_SH_PATH" --set-default-ca --server letsencrypt || print_error "Failed to set Let's Encrypt as default CA."

# --- Step 4: Issue Certificate ---
print_status "Issuing SSL certificate for $FULL_DOMAIN using DNS-01 (Cloudflare)..."
"$ACME_SH_PATH" --issue -d "$FULL_DOMAIN" --dns dns_cf || {
    print_error "Failed to issue certificate via DNS-01 Challenge."
    print_error "Ensure your domain is managed in Cloudflare and API key is correct."
    exit 1
}

# --- Step 5: Clean up API Keys ---
unset CF_Key
unset CF_Email

# --- Step 6: Install Certificate ---
print_status "Installing certificate for XRAY..."
sudo mkdir -p "$XRAY_TLS_DIR" || print_error "Failed to create TLS directory."

"$ACME_SH_PATH" --install-cert -d "$FULL_DOMAIN" \
    --key-file "$XRAY_TLS_DIR/private.key" \
    --fullchain-file "$XRAY_TLS_DIR/fullchain.pem" \
    --reloadcmd "sudo systemctl restart xray.service" || print_error "Failed to install certificate."

# --- Step 7: Permissions ---
sudo chown www-data:www-data "$XRAY_TLS_DIR/private.key" "$XRAY_TLS_DIR/fullchain.pem" || print_error "Failed to set ownership."
sudo chmod 600 "$XRAY_TLS_DIR/private.key" || print_error "Failed to set permissions for private key."
sudo chmod 644 "$XRAY_TLS_DIR/fullchain.pem" || print_error "Failed to set permissions for certificate."

# --- Step 8: Update XRAY Config ---
print_status "Updating XRAY config.json with TLS certificate paths and domain..."

CONFIG_FILE="$XRAY_CONFIG_DIR/config.json"
if ! [ -f "$CONFIG_FILE" ]; then
    print_error "XRAY config file not found at $CONFIG_FILE"
fi

UPDATED_CONFIG=$(jq \
    --arg cert_file "${XRAY_TLS_DIR}/fullchain.pem" \
    --arg key_file "${XRAY_TLS_DIR}/private.key" \
    --arg domain "$FULL_DOMAIN" \
    '
    (.inbounds[] | select(.port == 443 and .protocol == "vless") |
        .streamSettings.tlsSettings.certificates[0].certificateFile = $cert_file |
        .streamSettings.tlsSettings.certificates[0].keyFile = $key_file |
        .streamSettings.tlsSettings.serverName = $domain |
        .streamSettings.wsSettings.headers.Host = $domain)
    ' "$CONFIG_FILE") || print_error "Failed to update config with jq."

echo "$UPDATED_CONFIG" | sudo tee "$CONFIG_FILE" >/dev/null || print_error "Failed to write updated config."

print_status "âœ… Cloudflare SSL Configuration Complete!"
